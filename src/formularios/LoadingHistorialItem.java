/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;

import alertas.SolicitarDBProps;
import conexion.Conexion;
import controladores.ControladorRegistroPaciente;
import java.awt.Image;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import jiconfont.swing.IconFontSwing;
import recursos.iconos.GoogleMaterialDesignIcons;
import utiles.Constantes;

/**
 *
 * @author Alex
 */
public class LoadingHistorialItem extends javax.swing.JPanel {

    private boolean esServidor;

    /**
     * Creates new form LoadingHistorialItem
     */
    public LoadingHistorialItem(String mensaje, boolean esServidor) {
        initComponents();
        if (!esServidor) {
            this.remove(jButton1);
        }
        this.esServidor = esServidor;

        jLabel1.setText(mensaje);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lblSpinner = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(650, 130));
        setOpaque(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        setLayout(new java.awt.GridBagLayout());

        lblSpinner.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSpinner.setMaximumSize(new java.awt.Dimension(300, 300));
        lblSpinner.setMinimumSize(new java.awt.Dimension(150, 150));
        lblSpinner.setPreferredSize(new java.awt.Dimension(150, 150));
        add(lblSpinner, new java.awt.GridBagConstraints());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Esperando conexión con el servidor");
        jLabel1.setToolTipText("");
        jLabel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 0, 10, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        add(jLabel1, gridBagConstraints);

        jButton1.setBackground(Constantes.COLOR_SECUNDARIO);
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Configurar conexión");
        jButton1.setBorder(null);
        jButton1.setMaximumSize(new java.awt.Dimension(150, 50));
        jButton1.setMinimumSize(new java.awt.Dimension(140, 40));
        jButton1.setPreferredSize(new java.awt.Dimension(140, 40));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        add(jButton1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        if (esServidor) {
            lblSpinner.setIcon(IconFontSwing.buildIcon(GoogleMaterialDesignIcons.REPORT_PROBLEM, 130, Constantes.COLOR_ERROR));
        } else {

            ImageIcon imagen1 = new ImageIcon(getClass().getResource("/recursos/iconos/spinner.gif"));
            ImageIcon imagen2 = new ImageIcon(imagen1.getImage().getScaledInstance(lblSpinner.getWidth(), lblSpinner.getHeight(), Image.SCALE_DEFAULT));
            lblSpinner.setIcon(imagen2);
        }
    }//GEN-LAST:event_formComponentResized

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jButton1.setEnabled(false);
        
        Thread tmpTh = new Thread(() -> {
            SolicitarDBProps soli = new SolicitarDBProps(null, true);
            soli.getPropieades();
            soli.setVisible(true);
            
            if (Conexion.conectar() != null) {
                ControladorRegistroPaciente ctrl = new ControladorRegistroPaciente();
                ctrl.actualizarListaConsultas();
                ctrl.pintarHistorialPacientes();
            }
        });
        tmpTh.start();
      
        jButton1.setEnabled(true);

    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblSpinner;
    // End of variables declaration//GEN-END:variables
}
